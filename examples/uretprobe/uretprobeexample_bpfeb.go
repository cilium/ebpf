// Code generated by bpf2go; DO NOT EDIT.
//go:build arm64be || armbe || mips || mips64 || mips64p32 || ppc64 || s390 || s390x || sparc || sparc64
// +build arm64be armbe mips mips64 mips64p32 ppc64 s390 s390x sparc sparc64

package main

import (
	"bytes"
	_ "embed"
	"fmt"
	"io"

	"github.com/cilium/ebpf"
)

// LoadUretProbeExample returns the embedded CollectionSpec for UretProbeExample.
func LoadUretProbeExample() (*ebpf.CollectionSpec, error) {
	reader := bytes.NewReader(_UretProbeExampleBytes)
	spec, err := ebpf.LoadCollectionSpecFromReader(reader)
	if err != nil {
		return nil, fmt.Errorf("can't load UretProbeExample: %w", err)
	}

	return spec, err
}

// LoadUretProbeExampleObjects loads UretProbeExample and converts it into a struct.
//
// The following types are suitable as obj argument:
//
//     *UretProbeExampleObjects
//     *UretProbeExamplePrograms
//     *UretProbeExampleMaps
//
// See ebpf.CollectionSpec.LoadAndAssign documentation for details.
func LoadUretProbeExampleObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	spec, err := LoadUretProbeExample()
	if err != nil {
		return err
	}

	return spec.LoadAndAssign(obj, opts)
}

// UretProbeExampleSpecs contains maps and programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type UretProbeExampleSpecs struct {
	UretProbeExampleProgramSpecs
	UretProbeExampleMapSpecs
}

// UretProbeExampleSpecs contains programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type UretProbeExampleProgramSpecs struct {
	UretprobeBashReadline *ebpf.ProgramSpec `ebpf:"uretprobe_bash_readline"`
}

// UretProbeExampleMapSpecs contains maps before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type UretProbeExampleMapSpecs struct {
	Events *ebpf.MapSpec `ebpf:"events"`
}

// UretProbeExampleObjects contains all objects after they have been loaded into the kernel.
//
// It can be passed to LoadUretProbeExampleObjects or ebpf.CollectionSpec.LoadAndAssign.
type UretProbeExampleObjects struct {
	UretProbeExamplePrograms
	UretProbeExampleMaps
}

func (o *UretProbeExampleObjects) Close() error {
	return _UretProbeExampleClose(
		&o.UretProbeExamplePrograms,
		&o.UretProbeExampleMaps,
	)
}

// UretProbeExampleMaps contains all maps after they have been loaded into the kernel.
//
// It can be passed to LoadUretProbeExampleObjects or ebpf.CollectionSpec.LoadAndAssign.
type UretProbeExampleMaps struct {
	Events *ebpf.Map `ebpf:"events"`
}

func (m *UretProbeExampleMaps) Close() error {
	return _UretProbeExampleClose(
		m.Events,
	)
}

// UretProbeExamplePrograms contains all programs after they have been loaded into the kernel.
//
// It can be passed to LoadUretProbeExampleObjects or ebpf.CollectionSpec.LoadAndAssign.
type UretProbeExamplePrograms struct {
	UretprobeBashReadline *ebpf.Program `ebpf:"uretprobe_bash_readline"`
}

func (p *UretProbeExamplePrograms) Close() error {
	return _UretProbeExampleClose(
		p.UretprobeBashReadline,
	)
}

func _UretProbeExampleClose(closers ...io.Closer) error {
	for _, closer := range closers {
		if err := closer.Close(); err != nil {
			return err
		}
	}
	return nil
}

// Do not access this directly.
//go:embed uretprobeexample_bpfeb.o
var _UretProbeExampleBytes []byte
